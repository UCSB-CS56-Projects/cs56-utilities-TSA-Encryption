<project default="compile">
  <property environment="env"/>
  <!-- load the environment variables -->
  <property name="webRoot" value="${env.HOME}/public_html/cs56/projects/utilities"/>
  <property name="webBaseUrl" value="http://www.cs.ucsb.edu/~${env.USER}/cs56/projects/utilities"/>
  <property name="projectName" value="TSA_Encryption"/>
  <property name="javadocDest" value="${webRoot}/${projectName}/javadoc"/>
  <property name="javadocURL" value="${webBaseUrl}/${projectName}/javadoc"/>
  
  <target name="compile" description="compiles my code">
    <mkdir dir="build"/>
    
    <javac srcdir="src" destdir="build" debug="true" debuglevel="lines,source">
      
      <classpath>
	<pathelement location="build"/>
	<pathelement location="/cs/faculty/pconrad/public_html/cs56/lib/junit-4.8.2.jar"/>
      </classpath>
    </javac>
  </target>
  
  <target name="run" depends="compile" description="run my Deck funtions">
    <java classname="Cryptography" classpath="build" fork="true"/>
  </target>
  
  <target name="clean" description="delete unnecessary files and directories">
  
    <delete failonerror="false" verbose="true">
      <fileset dir="build" includes="*.class"/>
    </delete>
    <delete dir="javadoc" quiet="true"/>
    <delete dir="dist" quiet="true"/>
    <delete dir="download" quiet="true"/>
    <delete dir="build" quiet="true"/>
    <delete dir="temp" quiet="true"/>
  </target>
  
  <target name="javadoc" depends="compile">
    <delete dir="javadoc" quiet="true"/>
    
    <javadoc destdir="javadoc" author="true" version="true" use="true">
      <fileset dir="src" includes="**/*.java"/>
    </javadoc>
    <!-- delete the old javadoc -->
    <delete quiet="true" dir="${javadocDest}"/>
    
    <!--
	copy everything you just made to the javadoc destination, and then make it readable 
    -->
    
    <copy todir="${javadocDest}">
      <fileset dir="javadoc"/>
    </copy>
  
    <!--
	Note: this only does the chmod command on the 
	javadoc subdirectory and its contents.  You MIGHT have to           
        MANUALLY do the chmod on the parent directories.  However,
        you should only need to do that once. 
    -->
    <chmod dir="${javadocDest}" perm="755" type="dir" includes="**"/>
    <chmod dir="${javadocDest}" perm="755" type="file" includes="**/*"/>
    <echo>Javadoc deployed to ${javadocURL}</echo>
  </target>
  
  <target name="jar" depends="compile">
    <mkdir dir="dist"/>
  
    <jar destfile="dist/${projectName}.jar" basedir="build">
  
      <manifest>
	<attribute name="Main-Class" value="DerivativeSequence"/>
      </manifest>
    </jar>
  </target>
  
  <target name="download" depends="">
    
    <delete quiet="true">
      <fileset dir="temp" includes="**/*"/>
      <fileset dir="download" includes="**/*"/>
    </delete>
    <mkdir dir="download"/>
    <mkdir dir="temp"/>
    <mkdir dir="temp/${projectName}"/>
    
    <copy todir="temp/${projectName}">
      <fileset dir="." excludes="build/**, javadoc/**, **/*~, temp/**, dist/**, download/**"/>
    </copy>
    <tar destfile="temp/${projectName}.tar" basedir="temp" includes="${projectName}/**"/>
    <gzip zipfile="download/${projectName}.tgz" src="temp/${projectName}.tar"/>
    <zip destfile="download/${projectName}.zip" basedir="temp" includes="${projectName}/**"/>
    
    <delete quiet="true">
      <fileset dir="temp" includes="**/*"/>
    </delete>
  </target>
 





<target name="publish" depends="jar,javadoc,download">
   <mkdir dir="${webRoot}/${projectName}" />

   <delete dir="${webRoot}/${projectName}/browse" />
   <mkdir dir="${webRoot}/${projectName}/browse" />

   <delete dir="${webRoot}/${projectName}/download" />
   <mkdir dir="${webRoot}/${projectName}/download" />

   <copy file="html/index.html" todir="${webRoot}/${projectName}"/>

   <copy todir="${webRoot}/${projectName}/download" >
     <fileset dir="download"/>
     <fileset dir="dist" />
   </copy>

   <copy file="build.xml" todir="${webRoot}/${projectName}/browse"/>

   <copy todir="${webRoot}/${projectName}/browse/src" >
     <fileset dir="src"/>
   </copy>
   <chmod dir="${webRoot}/${projectName}"
          perm="755" type="both" includes="**/*"/>

   <echo>Project published to ${webBaseUrl}/${projectName}</echo>
</target>




  <target name="test" depends="compile">

    <junit haltonerror="no" haltonfailure="no">
       <classpath>
         <pathelement location="/cs/faculty/pconrad/public_html/cs56/lib/junit-4.8.2.jar"/>
         <pathelement location="build"/>
       </classpath>

       <batchtest fork="yes">
          <fileset dir="src/edu/ucsb/cs56/projects/utilities/TSA_Encryption">
            <!-- this will pick up every class with a name ending in Test -->
            <include name="*Test.java"/>
          </fileset>
       </batchtest>

        <formatter type="plain" usefile="false" /> 
       
    </junit>
  </target>




</project>
